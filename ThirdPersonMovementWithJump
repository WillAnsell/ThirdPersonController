using System.Collections;
using System.Collections.Generic;
using UnityEngine;


// Tutorial Used: https://www.youtube.com/watch?v=4HpC--2iowE
// Components = character Controller
// Plugins = Cinemachine

public class ThirdPersonMovement : MonoBehaviour
{

    public Transform Cam;
   public CharacterController controller;

   public float speed = 6f;

   public float turnSmoothTime = 0.1f;

   public float turnSmoothVelocity;
   


     private Vector3 playerVelocity;
    private bool groundedPlayer;
    private float jumpHeight = 1.0f;
    private float gravityValue = -9.81f;

    // Update is called once per frame
    void Update()
    {

        float horizontal = Input.GetAxisRaw("Horizontal");
        float vertical = Input.GetAxisRaw("Vertical");

        Vector3 direction = new Vector3(horizontal, 0f, vertical).normalized;

        if(direction.magnitude >= 0.1f){


            float targetAngle = Mathf.Atan2(direction.x, direction.z) * Mathf.Rad2Deg + Cam.eulerAngles.y;
            float angle = Mathf.SmoothDampAngle(transform.eulerAngles.y , targetAngle, ref turnSmoothVelocity, turnSmoothTime);

            transform.rotation = Quaternion.Euler(0f, angle, 0);

            Vector3 moveDir = Quaternion.Euler(0f,targetAngle, 0f) * Vector3.forward;



            controller.Move(moveDir.normalized * speed * Time.deltaTime);

             
        


        }

        groundedPlayer = controller.isGrounded;
        // Jump 

        if (groundedPlayer && playerVelocity.y < 0)
        {
            playerVelocity.y = 0f;
        }


        // Changes the height position of the player..
        if (Input.GetButton("Jump") && groundedPlayer)
        {
            playerVelocity.y += Mathf.Sqrt(jumpHeight * -3.0f * gravityValue);
        }

        playerVelocity.y += gravityValue * Time.deltaTime;
        controller.Move(playerVelocity * Time.deltaTime);
        
    }
}
